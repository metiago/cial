version: '3.8'

services:
  adminer_container:
    image: adminer:latest
    environment:
      ADMINER_DEFAULT_SERVER: postgres_db
      ADMINER_DESIGN: dracula
    ports:
      - 8080:8080

  postgres_db:
    image: postgres:13-alpine
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=12345678
      - POSTGRES_USER=postgres
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    depends_on:
      postgres_db:
        condition: service_healthy
    environment:
      - FLASK_CONFIG=default
      - FLASK_APP=run.py

  migrate:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres_db:
        condition: service_healthy
    environment:
      - FLASK_CONFIG=default
      - FLASK_APP=run.py
    command: >
      sh -c "flask db init && flask db migrate && flask db upgrade"

volumes:
  postgres_data:
